{"ast":null,"code":"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfileType() {\n    if (this.loggedIn()) {\n      const {\n        data\n      } = decode(this.getToken());\n      return data.admin === true ? 'admin' : 'user';\n    }\n  }\n\n  getAdmin() {\n    if (this.loggedIn()) {\n      const {\n        data\n      } = decode(this.getToken());\n      return data.admin ? true : false;\n    }\n  }\n\n  getCategories() {\n    const categories = [{\n      name: 'All'\n    }, {\n      name: 'Fish'\n    }, {\n      name: 'Scallops'\n    }, {\n      name: 'Shellfish'\n    }, {\n      name: 'Squid'\n    }, {\n      name: 'Meat'\n    }, {\n      name: 'Special'\n    }, {\n      name: 'Vegetables'\n    }, {\n      name: 'Fruits'\n    }, {\n      name: 'Hotpot'\n    }, {\n      name: 'Sale'\n    }, {\n      name: 'Newest Products'\n    }];\n    return categories;\n  }\n\n  saveCart(data) {\n    localStorage.removeItem('user_cart');\n    return localStorage.setItem('user_cart', JSON.stringify(data));\n  }\n\n  saveGuestCart(data) {\n    localStorage.removeItem('guest_cart');\n    return localStorage.setItem('guest_cart', JSON.stringify(data));\n  }\n\n  setCartQuantity(quantity) {\n    return localStorage.setItem('user_cart_quantity', quantity);\n  }\n\n  getGuestCartQuantity() {\n    const length = localStorage.getItem('guest_cart_quantity');\n    const total = length;\n    return total;\n  }\n\n  getUserCartQuantity() {\n    const length = localStorage.getItem('user_cart_quantity');\n    const total = length;\n    return total;\n  }\n\n  getOrders() {}\n\n  getUser() {}\n\n  getCartTotal(data) {\n    const total = data;\n    return total;\n  }\n\n  setProductArr() {}\n\n  getProductArr() {}\n\n  setSearchProduct(product) {\n    return localStorage.setItem('product_search', product);\n  }\n\n  getSearchProduct() {\n    return localStorage.getItem('product_search');\n  }\n\n  setSingleProduct(product_id) {\n    return localStorage.setItem('id_product', product_id);\n  }\n\n  getSingleProduct() {\n    return localStorage.getItem('id_product');\n  }\n\n  viewSingleProduct() {\n    const productId = localStorage.getItem('id_product');\n    window.location.href = `/product/${productId}`;\n  }\n\n  updateSingleProduct() {\n    const product_id = this.getSingleProductId();\n    window.location.href = `/productupdate/${product_id}`;\n  }\n\n  setAdminSingleProductId(id) {\n    return localStorage.setItem('id_admin_product', id);\n  }\n\n  getSingleProductId() {\n    return localStorage.getItem('id_admin_product');\n  }\n\n  setSingleOrder(order_id) {\n    return localStorage.setItem('id_order', order_id);\n  }\n\n  getSingleOrder() {\n    return localStorage.getItem('id_order');\n  }\n\n  viewSingleOrder() {\n    const orderId = this.getSingleOrder();\n    window.location.href = `/order/${orderId}`;\n  }\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  getProduct() {\n    return localStorage.getItem('product');\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    if (this.loggedIn() === false) {\n      window.location.assign('/');\n    } else if (this.getProfileType() === 'user') {\n      window.location.assign('/home');\n    } else if (this.getProfileType() === 'admin') {\n      window.location.assign('/admindashboard');\n    }\n  }\n\n  checkToken() {\n    const token = this.getToken();\n\n    if (localStorage.getItem('id_token')) {\n      if (this.isTokenExpired(token)) {\n        localStorage.removeItem('id_token');\n      } else {\n        return;\n      }\n    }\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token'); // this will reload the page and reset the state of the application\n\n    window.location.assign('/');\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/auth.js"],"names":["decode","AuthService","getProfileType","loggedIn","data","getToken","admin","getAdmin","getCategories","categories","name","saveCart","localStorage","removeItem","setItem","JSON","stringify","saveGuestCart","setCartQuantity","quantity","getGuestCartQuantity","length","getItem","total","getUserCartQuantity","getOrders","getUser","getCartTotal","setProductArr","getProductArr","setSearchProduct","product","getSearchProduct","setSingleProduct","product_id","getSingleProduct","viewSingleProduct","productId","window","location","href","updateSingleProduct","getSingleProductId","setAdminSingleProductId","id","setSingleOrder","order_id","getSingleOrder","viewSingleOrder","orderId","getProfile","getProduct","token","isTokenExpired","decoded","exp","Date","now","err","login","idToken","assign","checkToken","logout"],"mappings":"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","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfileType() {\n    if (this.loggedIn()) {\n        const { data } = decode(this.getToken());\n        return data.admin === true ? 'admin' : 'user'\n    } \n  }\n\n  getAdmin() {\n    if (this.loggedIn()) {\n      const { data } = decode(this.getToken());\n      return data.admin ? true : false\n    }\n  }\n\n  getCategories() {\n    const categories = [\n\t\t{\n\t\t\tname: 'All',\n\t\t},\n\t\t{\n\t\t\tname: 'Fish',\n\t\t},\n    {\n      name: 'Scallops',\n    },\n\t\t{\n\t\t\tname: 'Shellfish',\n\t\t},\n\t\t{\n\t\t\tname: 'Squid',\n\t\t},\n    {\n      name: 'Meat'\n    },\n    {\n      name: 'Special'\n    },\n    {\n      name: 'Vegetables',\n    },\n    {\n      name: 'Fruits'\n    },\n    {\n      name: 'Hotpot'\n    },\n    {\n      name: 'Sale'\n    },\n    {\n      name: 'Newest Products'\n    },\n    ]\n\n    return categories;\n  }\n\n  saveCart(data) {\n    localStorage.removeItem('user_cart');\n    return localStorage.setItem('user_cart', JSON.stringify(data));\n  }\n\n  saveGuestCart(data) {\n    localStorage.removeItem('guest_cart');\n    return localStorage.setItem('guest_cart', JSON.stringify(data))\n  }\n\n  setCartQuantity(quantity) {\n    return localStorage.setItem('user_cart_quantity', quantity);\n  }\n\n  getGuestCartQuantity() {\n    const length = localStorage.getItem('guest_cart_quantity')\n    const total = length;\n    return total;\n  }\n\n  getUserCartQuantity() {\n    const length = localStorage.getItem('user_cart_quantity')\n    const total = length;\n    return total;\n  }\n\n  getOrders() {\n\n  }\n\n  getUser() {\n\n  }\n\n  getCartTotal(data) {\n    const total = data;\n    return total;\n  }\n\n  setProductArr() {\n\n  }\n\n  getProductArr() {\n\n  }\n\n  setSearchProduct(product) {\n    return localStorage.setItem('product_search', product)\n  }\n\n  getSearchProduct() {\n    return localStorage.getItem('product_search');\n  }\n\n  setSingleProduct(product_id) {\n    return localStorage.setItem('id_product', product_id)\n  }\n\n  getSingleProduct() {\n    return localStorage.getItem('id_product');\n  }\n\n  viewSingleProduct() {\n    const productId = localStorage.getItem('id_product');\n\n    window.location.href = `/product/${productId}`;\n  }\n\n  updateSingleProduct() {\n    const product_id = this.getSingleProductId();\n    window.location.href = `/productupdate/${product_id}`;\n  }\n\n  setAdminSingleProductId(id) {\n    return localStorage.setItem('id_admin_product', id)\n  }\n\n  getSingleProductId() {\n    return localStorage.getItem('id_admin_product')\n  }\n\n  setSingleOrder(order_id) {\n    return localStorage.setItem('id_order', order_id);\n  }\n\n  getSingleOrder() {\n    return localStorage.getItem('id_order')\n  }\n\n  viewSingleOrder() {\n    const orderId = this.getSingleOrder();\n\n    window.location.href = `/order/${orderId}`;\n  }\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  getProduct() {\n    return localStorage.getItem('product');\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else \n      return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    if (this.loggedIn() === false) {\n      window.location.assign('/');\n    } else if (this.getProfileType() === 'user') {\n      window.location.assign('/home');\n    } else if (this.getProfileType() === 'admin') {\n        window.location.assign('/admindashboard');\n    }\n  }\n\n  checkToken() {\n    const token = this.getToken();\n    if (localStorage.getItem('id_token')) {\n      if (this.isTokenExpired(token)) {\n        localStorage.removeItem('id_token')\n      } else {\n        return\n      }\n      \n    }\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n"]},"metadata":{},"sourceType":"module"}