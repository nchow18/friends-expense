[{"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/index.js":"1","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/App.js":"2","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/reportWebVitals.js":"3","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Home.js":"4","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Header/Header.js":"5","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Footer/Footer.js":"6","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/auth.js":"7","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Login.js":"8","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/mutations.js":"9","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/queries.js":"10","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Account.js":"11","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/AccountDetails.js":"12","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/Events.js":"13","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/CreateEvent.js":"14","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/EventPage.js":"15","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Activities.js":"16","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/ActivityIdeas.js":"17","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Itinerary.js":"18","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Expense.js":"19","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Meal.js":"20","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/MealIdeas.js":"21","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Groceries.js":"22","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/TotalCost.js":"23","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/SplitCost.js":"24","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/ActivityIdeasModal.js":"25"},{"size":500,"mtime":1629090839356,"results":"26","hashOfConfig":"27"},{"size":1640,"mtime":1629303210459,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1629090839356,"results":"29","hashOfConfig":"27"},{"size":207,"mtime":1629093334196,"results":"30","hashOfConfig":"27"},{"size":988,"mtime":1629138565012,"results":"31","hashOfConfig":"27"},{"size":115,"mtime":1629090839356,"results":"32","hashOfConfig":"27"},{"size":2271,"mtime":1629228613469,"results":"33","hashOfConfig":"27"},{"size":1582,"mtime":1629092319337,"results":"34","hashOfConfig":"27"},{"size":4838,"mtime":1629407386638,"results":"35","hashOfConfig":"27"},{"size":2426,"mtime":1629146538503,"results":"36","hashOfConfig":"27"},{"size":1589,"mtime":1629146380822,"results":"37","hashOfConfig":"27"},{"size":1209,"mtime":1629146803509,"results":"38","hashOfConfig":"27"},{"size":1126,"mtime":1629405936498,"results":"39","hashOfConfig":"27"},{"size":138,"mtime":1629142320979,"results":"40","hashOfConfig":"27"},{"size":6459,"mtime":1629405956518,"results":"41","hashOfConfig":"27"},{"size":3684,"mtime":1629307604815,"results":"42","hashOfConfig":"27"},{"size":5738,"mtime":1629407863684,"results":"43","hashOfConfig":"27"},{"size":132,"mtime":1629229129521,"results":"44","hashOfConfig":"27"},{"size":126,"mtime":1629229208904,"results":"45","hashOfConfig":"27"},{"size":117,"mtime":1629229250761,"results":"46","hashOfConfig":"27"},{"size":133,"mtime":1629229334604,"results":"47","hashOfConfig":"27"},{"size":132,"mtime":1629229409401,"results":"48","hashOfConfig":"27"},{"size":132,"mtime":1629229426210,"results":"49","hashOfConfig":"27"},{"size":132,"mtime":1629229434993,"results":"50","hashOfConfig":"27"},{"size":251,"mtime":1629321717505,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ixz0d5",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/index.js",[],["108","109"],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/App.js",["110"],"import React, { useState } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from './utils/auth';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Account from './pages/Account';\n\nimport './css/App.css';\n\nconst client = new ApolloClient({\n  request: operation => {\n      const token = localStorage.getItem('id_token');\n      operation.setContext({\n          headers: {\n              authorization: token ? `Bearer ${token}` : ''\n          }\n      });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n\n  Auth.checkToken();\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n          <div className=\"page\">\n            <div className=\"header\">\n              <Header />\n            </div>\n\n            <div className=\"content\">\n              <Switch> \n                <Route \n                  exact path=\"/\"\n                  render={() => <Home />} />\n                <Route \n                  exact path=\"/login\"\n                  render={() => <Login />} />\n                  {Auth.loggedIn() === true && (\n                    <Route\n                      exact path=\"/account\"\n                      render={() => <Account />} />\n                  )}\n              </Switch>\n            </div>\n\n            <div className=\"footer\">\n              <Footer />\n            </div>\n          </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/reportWebVitals.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Home.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Header/Header.js",["111"],"import React, { useEffect } from 'react';\nimport '../../css/Header.css';\nimport Auth from '../../utils/auth';\nimport { useQuery } from '@apollo/react-hooks';\nimport { USER_ME } from '../../utils/queries';\n\nfunction Header() {\n\n  const { loading, data } = useQuery(USER_ME);\n  const user_data = data?.userMe;\n\n  if (loading) return `...LOADING`;\n\n  return (\n    <div className=\"header-content\">\n      <div>\n        {Auth.loggedIn() === true && (\n        <div>Welcome, {user_data.first_name}</div>\n        )}\n      </div>\n\n      <div>\n        <div>Friends Expense</div>\n        <div>\n          <a href=\"/\">Home</a>\n          {Auth.loggedIn() === true ? (\n            <>\n              <a href=\"/account\">Account</a>\n              <a href=\"/logout\">Log Out</a>\n            </>\n          ) : (\n            <>\n              <a href=\"/login\">Log In</a>\n              <a href=\"/signup\">Sign Up</a>\n            </>\n          )}\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Header;","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Footer/Footer.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/auth.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Login.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/mutations.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/utils/queries.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/pages/Account.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/AccountDetails.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/Events.js",["112"],"import React, { useState } from 'react';\nimport '../../css/Account.css';\nimport EventPage from '../Events/EventPage';\nimport { useQuery } from '@apollo/react-hooks';\nimport { EVENTS } from '../../utils/queries';\n\nfunction Events(props) {\n\n  const {\n    user_me\n  } = props\n\n  const [UserEvent] = useState(user_me.events)\n  const [currentEvent, setCurrentEvent] = useState(UserEvent[0]);\n  const { loading, data } = useQuery(EVENTS);\n  const all_events = data?.events || {};\n\n  if (loading) return `...Loading`;\n\n  return (\n    <div className=\"events-container\">\n      <span>My Events</span>\n      <div>\n        <div className=\"event-list\">\n          {user_me.events.map((event) => (\n            <span key={event.event_name} onClick={() => {setCurrentEvent(event)}} className=\"event-button\" key={event.event_name}>{event.event_name} <b></b></span>\n          ))}          \n        </div>\n        <div className=\"event-display\">\n          <EventPage \n            currentEvent={currentEvent}\n            all_events={all_events}\n            user_me={user_me} />\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Events;","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Account/CreateEvent.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/EventPage.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Activities.js",["113"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ACTIVITY, REMOVE_ACTIVITY } from '../../utils/mutations';\n\nfunction Activities(props) {\n\n  const {\n    activitiesArr,\n    event_id\n  } = props\n\n  const [ addActivity, { error }] = useMutation(ADD_ACTIVITY);\n  const [ removeActivityDB ] = useMutation(REMOVE_ACTIVITY);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    date: '',\n    time: '',\n    cost: '',\n    map: '',\n    address: '',\n    website: ''\n  })\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n\n  const activityFormSubmit = async (event) => {\n    console.log('form submitted')\n\n    try {\n      addActivity({\n        variables: {\n          input: {\n            name: formData.name,\n            date: formData.date,\n            time: formData.time,\n            cost: formData.cost,\n            address: formData.address,\n            website: formData.website,\n            map: formData.map,\n            event_id: event_id\n          }\n        }\n      })\n    } catch (e) {\n      console.log(e);\n    }\n\n    activitiesArr.push(formData);\n  }\n\n  const removeActivity = async (activityId) => {\n\n    const confirm = window.confirm('Remove Activity?')\n\n    if (confirm) {\n      try {\n        removeActivityDB({\n          variables: {\n            event_id: event_id,\n            activity_id: activityId\n          }\n        })\n      } catch (e) {\n        console.log(e);\n      }\n  \n      for (var i = 0; i < activitiesArr.length; i++) {\n        if (activityId === activitiesArr[i]._id) {\n          activitiesArr.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"activities-component\">\n      <div>\n        <div>\n          <span>Activity</span>\n          <span>Date</span>\n          <span>Time</span>\n          <span>Cost</span>\n          <span>Map</span>\n          <span>Address</span>\n          <span>Website</span>\n          <span></span>\n          {activitiesArr.map((activity) => (\n            <>\n              <div>{activity.name}</div>\n              <div>{activity.date}</div>\n              <div>{activity.time}</div>\n              <div>$ {activity.cost}</div>\n              <div>{activity.map}</div>\n              <div>{activity.address}</div>\n              <div>{activity.website}</div>\n              <i className=\"far fa-trash-alt\" onClick={() => {removeActivity(activity._id)}}></i>\n             </>\n          ))}\n        </div>        \n      </div>\n\n      <div>\n        <span>Add Activity</span>\n        <form>\n          <div>\n            <input name=\"name\" onChange={handleInputChange} value={formData.name} placeholder='Activity' />\n            <input type=\"date\" name=\"date\" onChange={handleInputChange} value={formData.date} placeholder='Date' />\n            <input name=\"time\" onChange={handleInputChange} value={formData.time} placeholder='Time'/>\n            <input name=\"cost\" onChange={handleInputChange} value={formData.cost} placeholder='Cost'/>\n            <input name=\"map\" onChange={handleInputChange} value={formData.map} placeholder='Map'/>\n            <input name=\"address\" onChange={handleInputChange} value={formData.address} placeholder='Address'/>\n            <input name=\"website\" onChange={handleInputChange} value={formData.website} placeholder='Website'/>\n            <i onClick={() => {activityFormSubmit()}} disabled={!(formData.name && formData.date && formData.time && formData.cost && formData.map && formData.address && formData.website)}>Add Activity</i>\n          </div>\n        </form>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Activities;","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/ActivityIdeas.js",["114","115","116","117"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ACTIVITY, REMOVE_ACTIVITY, ADD_ACTIVITY_IDEA, REMOVE_ACTIVITY_IDEA, UPDATE_ACTIVITY_IDEA } from '../../utils/mutations';\n\nfunction ActivityIdeas(props) {\n\n  const {\n    activityIdeasArr,\n    event_id,\n    user_me\n  } = props\n\n  const [voteModal, setVoteModal] = useState(false);\n  const [ addActivityIdeas, { error }] = useMutation(ADD_ACTIVITY_IDEA);\n  const [ removeActivityIdeasDB ] = useMutation(REMOVE_ACTIVITY_IDEA);\n  const [ updateActivityIdeasDB ] = useMutation(UPDATE_ACTIVITY_IDEA)\n\n  const [formData, setFormData] = useState({\n    name: '',\n    date: '',\n    time: '',\n    cost: '',\n    map: '',\n    address: '',\n    website: ''\n  })\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n\n  const activityFormSubmit = async (event) => {\n\n    try {\n      addActivityIdeas({\n        variables: {\n          input: {\n            name: formData.name,\n            date: formData.date,\n            time: formData.time,\n            cost: formData.cost,\n            address: formData.address,\n            website: formData.website,\n            map: formData.map,\n            event_id: event_id\n          }\n        }\n      })\n    } catch (e) {\n      console.log(e);\n    }\n\n    activityIdeasArr.push(formData);\n  }\n\n  const add_user_vote = async (activity_index) => {\n\n    console.log(activity_index);\n    const data = activityIdeasArr[activity_index];\n    console.log(data);\n\n    // try {\n    //   updateActivityIdeasDB({\n    //     variables: {\n    //       input: {\n\n    //       }\n    //     }\n    //   })\n    // }\n\n    activityIdeasArr[activity_index].votes.push(user_me.first_name)\n  }\n\n  const removeActivity = async (activityId) => {\n\n    const confirm = window.confirm('Remove Activity Idea?')\n\n    if (confirm) {\n      try {\n        removeActivityIdeasDB({\n          variables: {\n            event_id: event_id,\n            activity_idea_id: activityId\n          }\n        })\n      } catch (e) {\n        console.log(e);\n      }\n  \n      for (var i = 0; i < activityIdeasArr.length; i++) {\n        if (activityId === activityIdeasArr[i]._id) {\n          activityIdeasArr.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  var [votes] = useState([])\n  const [currentVote, setCurrentVote] = useState(votes[0])\n\n  console.log(user_me);\n\n  function checkVote(index) {\n    for (var i = 0; activityIdeasArr[index].votes.length; i++) {\n      if (user_me.first_name.toLowerCase() === activityIdeasArr[index].votes[i])\n      return true;\n    }\n  }\n\n  return (\n    <div className=\"activity-ideas-component\">\n      <div>\n        <div>\n          <span>Activity</span>\n          <span>Date</span>\n          <span>Time</span>\n          <span>Cost</span>\n          <span>Map</span>\n          <span>Address</span>\n          <span>Website</span>\n          <span>Votes</span>\n          <span></span>\n          {activityIdeasArr.map((activity, index) => (\n            <>\n              <div>{activity.name}</div>\n              <div>{activity.date}</div>\n              <div>{activity.time}</div>\n              <div>$ {activity.cost}</div>\n              <div>{activity.map}</div>\n              <div>{activity.address}</div>\n              <div>{activity.website}</div>\n              <div id={index}><i className=\"fas fa-info-circle\" onClick={() => {setVoteModal(true); setCurrentVote(index)}}></i>\n                {checkVote(index) ? (\n                  <>\n                    <input type=\"checkbox\" checked onClick={() => {}}/><i className=\"far fa-check-square\"></i>\n                  </>\n                ) : (\n                  <>\n                    <input type=\"checkbox\" onClick={() => {add_user_vote(index)}}/><i className=\"far fa-check-square\"></i>                  \n                  </>\n                )} \n              </div>\n              <i className=\"far fa-trash-alt\" onClick={() => {removeActivity(activity._id)}}></i>\n             </>\n          ))}\n        </div>        \n      </div>\n\n      <div>\n        <span>Add Activity Idea</span>\n        <form>\n          <div>\n            <input name=\"name\" onChange={handleInputChange} value={formData.name} placeholder='Activity' />\n            <input type=\"date\" name=\"date\" onChange={handleInputChange} value={formData.date} placeholder='Date' />\n            <input name=\"time\" onChange={handleInputChange} value={formData.time} placeholder='Time'/>\n            <input name=\"cost\" onChange={handleInputChange} value={formData.cost} placeholder='Cost'/>\n            <input name=\"map\" onChange={handleInputChange} value={formData.map} placeholder='Map'/>\n            <input name=\"address\" onChange={handleInputChange} value={formData.address} placeholder='Address'/>\n            <input name=\"website\" onChange={handleInputChange} value={formData.website} placeholder='Website'/>\n            <i onClick={() => {activityFormSubmit()}} disabled={!(formData.name && formData.date && formData.time && formData.cost && formData.map && formData.address && formData.website)}>Add Activity</i>\n          </div>\n        </form>\n      </div>\n\n      {voteModal === true && (\n          <div className=\"vote-modal\" onClick={() => setVoteModal(false)}>\n            {activityIdeasArr[currentVote].votes ? (\n              <>\n                <span><b>Votes:</b></span>\n                {activityIdeasArr[currentVote].votes.map((vote, index) => (\n                  <span><b>{index + 1}. </b> {vote}</span>\n                ))}\n              </>              \n            ) : (\n              <span><b>No Votes Yet</b></span>\n            )}\n          </div>\n        )}\n\n    </div>\n  )\n}\n\nexport default ActivityIdeas;","/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Itinerary.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Expense.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Meal.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/MealIdeas.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/Groceries.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/TotalCost.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/SplitCost.js",[],"/Users/nc/Desktop/projects/friends-expense/mongodb/client/src/components/Events/ActivityIdeasModal.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":26,"column":108,"nodeType":"129","messageId":"130","endLine":26,"endColumn":130},{"ruleId":"122","severity":1,"message":"131","line":12,"column":26,"nodeType":"124","messageId":"125","endLine":12,"endColumn":31},{"ruleId":"122","severity":1,"message":"132","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":22},{"ruleId":"122","severity":1,"message":"133","line":3,"column":24,"nodeType":"124","messageId":"125","endLine":3,"endColumn":39},{"ruleId":"122","severity":1,"message":"131","line":14,"column":31,"nodeType":"124","messageId":"125","endLine":14,"endColumn":36},{"ruleId":"122","severity":1,"message":"134","line":16,"column":11,"nodeType":"124","messageId":"125","endLine":16,"endColumn":32},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'error' is assigned a value but never used.","'ADD_ACTIVITY' is defined but never used.","'REMOVE_ACTIVITY' is defined but never used.","'updateActivityIdeasDB' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]